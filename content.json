{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"John Doe","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"初始MyBatis","slug":"mybatis","date":"2018-12-01T02:56:43.767Z","updated":"2018-12-01T02:58:02.292Z","comments":true,"path":"2018/12/01/mybatis/","link":"","permalink":"http://yoursite.com/2018/12/01/mybatis/","excerpt":"","text":"官方网站(Github)：http://mybatis.org(进不去)https://github.com/mybatis/mybatis-3/releasesMVC：（Model View Controller）模型－视图－控制器Model1：jsp+javabean的开发模式,用户请求交给jsp，然后jsp通过调用javabeans来进行数据库的访问和数据处理。Model2：是MVC的体现，javabeans是Module，而jsp仅仅充当View，Servlet是controller。jsp向servlet提交数据，servlet进行javabeans的实例化和调用，而javabeans进行数据库的访问读取。最后servlet将访问结果交给jsp呈现。ORM:（Object Relational Mapping）对象-关系-映射1、持久化是程序数据在瞬时状态和持久状态间转换的过程什么是JDBC？答：即Java数据库连接技术JDBC操作步骤答：1、加载驱动 2、连接数据库 3、执行SQL语句 4、处理结果 5、关闭连接框架技术优势：答：不用再考虑公共问题，框架已经写好，可以专心写业务逻辑，结构统一便于学习和维护主流框架介绍：1、Struts2（MVC设计模式web层框架）2、Hibernate（持久化框架Dao层框架）3、Spring（重点，结合框架）4、SpringMVC（高性能框架）5、MyBatis（半自动化ORM，Dao层，动态SQL,）6、shiro(安全框架)Mybatis框架的优缺点优点1、与JDBC相比，减少了50%以上的代码量2、最简单的持久化框架，小巧并简单易学3、SQL代码从程序代码中彻底分离，可重用4、提供XML标签，支持编写动态SQL5、提供映射标签，支持对象与数据可的ORM字段关系映射缺点1、SQL语句编写工作量大，对开发人员有一定要求 2、数据库一致性差Mybatis环境搭建：第一步：导入jar包到WEB-INF下的lib第二步：部署jar文件第三步：创建MyBatis核心配置文件（mybatis-config.xml）第四步：创建POJO（普通Java实体类（对象和数据库字段对应））第五步：编写SQL映射文件（XML文件） 第六步：创建测试类SqlSessionFactoryBuilder用过即丢SqlSessionFactory方法：openSession(boolean alim)true:关闭事务控制，false,表示开启事务最佳作用域范围：应用的全局作用域SqlSession 线程级SQL映射文件1、resultMap和resultType不能同时存在resultType：返回结果类型或对象resultMap：返回多个对象的集合2、当使用注解@Param()时不用写parameterType=“”标识传入的类型了3、SqlSessionFactory.openSession(boolean bol)true:表示关闭事务提交，false:表示开启事务提交4、增删改操作中没有 resultType或resultMap因为返回类型只有一种就是int resultMap 动态SQL1、where可以自动过滤 and||or2、chosses相当于java中的switch，通常于when和otherwise使用3、trimprefix:有返回值的情况下加上 前缀suffix:加上后缀prefixOverrides: 忽略首部的指定内容suffixOverrides:忽略尾部出现的指定内容4、foreach（通常用于in条件）item：集合中每一个元素别名index:迭代的位置open:语句开始指定用什么separator:每次迭代结束使用什么分割close:语句结束指定用什么collection:指定不同的值：List:list数组：array5、iftest属性判断条件成立进 Spring总结https://mp.weixin.qq.com/s/QswWwM1zhrtYaeqyji_bYQ1、轻量级框架，当前主流的框架2、“一站式”的企业应用框架3、IoC容器（控制反转）：把对象创建交给spring进行配置数据访问支持：1、简化JDBC/ORM框架 2、声明式事务DI依赖注入：向类里面的属性中设置值关系：依赖注入不能单独存在，需要在ioc基础上完成操作4、所谓面向切面编程，是一种通过预编译方式和运行期动态代理实现在不修改源代码的情况下给程序动态添加功能的技术5、工厂（Factory）：相当于代理类，工厂负责根据用户的描述信息生产符合规范的产品在工厂模式中6、控制反转（工厂模式）AOP（代理模式）Spring的优点：1）低侵入式设计2）独立于各种应用服务器3）依赖注入特性将组件关系透明化，降低了耦合度4) 面向切面编程特性允许将通用任务进行集中式处理5) 与第三方框架的良整合Spring体系结构 IOCioc底层实现的原理： Bean标签中常用属性（1）id属性：其名称，id属性值名称任意命名id属性值不能包含特殊符号，根据id值得到配置对象（2）class属性：创建对象所所在类的全路径（3）name属性：功能和id属性一样，但是可以包含特殊符号，起多个引用名称，（4）scope属性：默认值：singleton(单例模式)prototype(多例)属性注入三种方式：1、使用set方法注入2、使用有参构造注入3、使用接口注入 名称空间注入 Spring整合web项目原理1、加载核心配置文件（new ClassPsthXmlApplicationContext(“….xml”)）2、实现思想：把加载配置文件和创建对象的过程，在服务器启动时完成3、实现原理：1）ServletCOntext对象2）监听器3）具体使用—在服务器启动时候，为每个项目创建和一个ServletContext对象—在ServletContext对象创建时候，使用监听器可以具体到ServletContext对象在什么时候创建–使用监听器听到ServletContext对象创建时候–加载Spring配置文件，把配置文件配置对象创建–把创建出来的对象放到ServletContext域里面（setAttribute方法） 4–获取对象时候，到ServletContext域得到（getAttribute方法）AOP（Aspect Oriented Programming）目标：专注于业务逻辑原理：将复杂的需求分析出不同方面，将公共功能集中解决采用代理机制组装起来运行，在不改变原程序的基础上对代码进行强制处理，增加新的功能AOP相关术语1、增强/通知（Advice)前置增强（方法之前增强）\\后置增强\\环绕增强\\异常抛出\\最终增强2、切入点（Pointcut）在类中有很多方法可以被增强，实际被增强的方法就做切入点3、连接点（Joinpoint）类里面可以被增强的方法，这些方法就叫做连接点4、切面（Aspect）：把增强用到具体切入点上面的过程叫做切面5、目标对象（Target object）代理的目标对象（要增强的类）6、Aop代理（AOP proxy）一个类被AOP织入增强后，就产生一个结果代理类7、织入（Weaving） 把增强（advice）用到target(类）的过程叫做织入使用AOP步骤：1、在项目中添加Spring AOP的jar文件2、编写前置增强和后置增强实现日志功能3、编写Spring配置文件，对业务方法进行增强处理4、编写代码获取带有增强处理的业务对象； 环绕增强： Spring的bean管理（注解）创建对象四个注解(使用方式都相同，没有太大区别) 属性赋值注解1、Autowired //自动注入2、Resource(name=””) //name中写注解创建dao对象value值 一般使用文件和注解混合使用，创建对象用配置文件的方式，属性赋值用注解的方法AspectJ1、spectJ不是Spring的一部分，只是和Spring一起使用进行AOP的操作2、使用aspectj实现aop有两种方式1）基于aspectj的XML配置2）基于aspectj的注解方式 Spring和Mybatis整合开发步骤 Spring事务管理方式一编程式（不用）方式二声明式需要配置XML使用注解实现Spring为不同的持久化（dao）框架提供了不同PlatformTransactionManager接口实现 MVC：（Model View Controller）模型－视图－控制器Model1：jsp+javabean的开发模式,用户请求交给jsp，然后jsp通过调用javabeans来进行数据库的访问和数据处理。Model2：是MVC的体现，javabeans是Module，而jsp仅仅充当View，Servlet是controller。jsp向servlet提交数据，servlet进行javabeans的实例化和调用，而javabeans进行数据库的访问读取。最后servlet将访问结果交给jsp呈现。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-12-01T00:46:11.762Z","updated":"2018-12-01T00:46:11.772Z","comments":true,"path":"2018/12/01/hello-world/","link":"","permalink":"http://yoursite.com/2018/12/01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}